# This workflow will install Python dependencies, run tests, lint, and upload coverage to Codecov

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Step 1: Set up Python version
    - name: Set up Python 3.13.0rc1
      uses: actions/setup-python@v3
      with:
        python-version: '3.13.0-rc1'

    # Step 2: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest autopep8 pylint pyflakes pytest-cov codecov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 3: Run flake8 linting on hw1 and hw2
    - name: Lint with flake8
      run: |
        # Linting hw1
        flake8 hw1 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 hw1 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

        # Linting hw2
        flake8 hw2 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 hw2 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 4: Test hw1 using pytest
    - name: Testing hw1 with pytest
      run: |
        pytest hw1/pytest.py --cov=hw1 --cov-report=xml
      env:
        PYTHONPATH: ${{ github.workspace }}

    # Step 5: Format code using autopep8
    - name: Run autopep8
      run: |
        autopep8 --in-place --aggressive --aggressive hw2/hw2_debugging.py hw2/rand.py

    # Step 6: Run pylint on hw2 code
    - name: Run pylint
      run: |
        pylint hw2/hw2_debugging.py hw2/rand.py

    # Step 7: Run pyflakes on hw2 code
    - name: Run pyflakes
      run: |
        pyflakes hw2/hw2_debugging.py hw2/rand.py

    # Step 8: Test hw2 using pytest and collect coverage
    - name: Testing hw2 with pytest
      run: |
        pytest hw2/pytest.py --cov=hw2 --cov-report=xml
      env:
        PYTHONPATH: ${{ github.workspace }}

    # Step 9: Upload coverage to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml
        fail_ci_if_error: true

